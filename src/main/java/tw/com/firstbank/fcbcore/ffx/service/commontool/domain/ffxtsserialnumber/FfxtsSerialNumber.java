package tw.com.firstbank.fcbcore.ffx.service.commontool.domain.ffxtsserialnumber;

import java.io.Serializable;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import javax.persistence.*;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaDelete;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.CriteriaUpdate;
import javax.persistence.metamodel.Metamodel;

import lombok.*;
import tw.com.firstbank.fcbcore.fcbframework.core.application.exception.ValidationException;
import tw.com.firstbank.fcbcore.fcbframework.core.domain.BaseAggregate;
import tw.com.firstbank.fcbcore.ffx.service.commontool.application.exception.ServiceStatusCode;
import tw.com.firstbank.fcbcore.ffx.service.commontool.application.in.ffxtsserialnumber.mapper.FfxtsSerialNumberDto;
import tw.com.firstbank.fcbcore.ffx.service.commontool.application.util.SerialNoUtils;
import tw.com.firstbank.fcbcore.ffx.service.commontool.domain.ffxtsserialnumber.vo.Identifier;


/**
 * The type of FFXTS_SERIAL_NUMBER 外匯序號檔 Generated by st1 tool
 */
@Entity
@Getter
@Setter
@ToString
@NoArgsConstructor
@EqualsAndHashCode
@Table(name = "FFXTS_SERIAL_NUMBER_TEST",
		uniqueConstraints = {@UniqueConstraint(columnNames = {"SYSTEM_TYPE", "SERIAL_ID"})})
public class FfxtsSerialNumber extends BaseAggregate<FfxtsSerialNumber, Identifier>
		implements Serializable {

	@Column(name = "FFXTS_SERIAL_NUMBER_ID", nullable = false, updatable = false)
	private Long ffxtsSerialNumberId;

	@Embedded
	private Identifier identifier;

	@Column(name = "BEGIN_NO")
	private String beginNo;

	@Column(name = "END_NO")
	private String endNo;

	@Id
	@Column(name = "LAST_NO")
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "PK_FFXTS_SERIAL_NUMBER_TEST")
	@SequenceGenerator(name = "PK_FFXTS_SERIAL_NUMBER_TEST",
			sequenceName = "PK_FFXTS_SERIAL_NUMBER_TEST", allocationSize = 1)
	private Long lastNo;

	/**
	 * Instantiates a SerialNumber for getSerialNumber.
	 *
	 * @param dto FfxtsSerialNumberDto
	 */
	public FfxtsSerialNumber(FfxtsSerialNumberDto dto) {
		this.identifier =
				new Identifier(dto.getIdentifier().getSystemType(), dto.getIdentifier().getSerialId());
		this.beginNo = dto.getBeginNo();
		this.endNo = dto.getEndNo();
		this.checkBeginNoRange();
		this.checkBeginNoAndEndNo();
	}

	/**
	 * Checks if beginNo is above 0.
	 */
	private void checkBeginNoRange() {
		if (SerialNoUtils.compare(this.getBeginNo(), "0") == 0) {
			throw new ValidationException(ServiceStatusCode.BEGIN_NO_CANT_BE_ZERO.getCode(),
					"BeginNo 不可為 0");
		}
		if (this.getBeginNo().trim().startsWith("-")) {
			throw new ValidationException(ServiceStatusCode.BEGIN_NO_CANT_BE_LESS_THAN_ZERO.getCode(),
					"BeginNo 不可小於 0");
		}
	}

	/**
	 * Checks if beginNo is less than endNo.
	 */
	private void checkBeginNoAndEndNo() {
		if (Objects.equals(this.getBeginNo(), this.getEndNo())) {
			throw new ValidationException(ServiceStatusCode.BEGIN_NO_EQUAL_TO_END_NO.getCode(),
					"BeginNo 不可等於 EndNo");
		}
		if (SerialNoUtils.compare(this.getBeginNo(), this.getEndNo()) > 0) {
			throw new ValidationException(ServiceStatusCode.BEGIN_NO_GREATER_THAN_END_NO.getCode(),
					"BeginNo 不可大於 EndNo");
		}
	}

	/**
	 * Gets aggregate id.
	 *
	 * @return <i>systemType</i>$<i>serialId</i>
	 */
	@Override
	public String getAggregateId() {
		return this.getIdentifier().getSystemType() + "$" + this.getIdentifier().getSerialId();
	}

	/**
	 * Updates lastNo of this record. Basically, plus one.
	 */
	// public void updateLastNo() {
	// // 如果 LastNo 為 null，表示這筆序號還沒被取用過
	// // 則直接設為 BeginNo 代表第一個可用號碼
	// if (this.getLastNo() == null) {
	// this.lastNo = this.getBeginNo();
	// } else {
	// checkEndNoAndLastNo();
	// this.lastNo = SerialNoUtils.add(this.getLastNo(), 1, this.getEndNo());
	// }
	// }


	/**
	 * Checks if this SerialNumber is full.
	 */
	// private void checkEndNoAndLastNo() {
	// if (SerialNoUtils.compare(this.getEndNo(), this.getLastNo()) <= 0) {
	// throw new ValidationException(ServiceStatusCode.END_NO_REACHED.getCode(), "此序號已經用盡");
	// }
	// }
}
